
SampleApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000069c  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000824  0800082c  0000182c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000824  08000824  0000182c  2**0
                  CONTENTS
  4 .ARM          00000000  08000824  08000824  0000182c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000824  0800082c  0000182c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000824  08000824  00001824  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000828  08000828  00001828  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000182c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000182c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000182c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000c13  00000000  00000000  0000185c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000282  00000000  00000000  0000246f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  000026f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000084  00000000  00000000  000027b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000153f  00000000  00000000  0000283c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000e2e  00000000  00000000  00003d7b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000507b  00000000  00000000  00004ba9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00009c24  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000248  00000000  00000000  00009c68  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000044  00000000  00000000  00009eb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800080c 	.word	0x0800080c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	0800080c 	.word	0x0800080c

080001c8 <delay>:

#include <stdint.h>
#include <stm32f407xx.h>
#include <stm32f407xx_gpio_driver.h>
void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
    for(uint32_t i=0;i<500000/2;i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ee:	4770      	bx	lr
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <InitFunction>:
void InitFunction(GPIO_Handle_t *pGPIOHandle,GPIO_RegDef_t * port,uint8_t PinNumber, uint8_t PinMode, uint8_t PinSpeed, uint8_t PinPuPdControl)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b084      	sub	sp, #16
 80001f8:	af00      	add	r7, sp, #0
 80001fa:	60f8      	str	r0, [r7, #12]
 80001fc:	60b9      	str	r1, [r7, #8]
 80001fe:	4611      	mov	r1, r2
 8000200:	461a      	mov	r2, r3
 8000202:	460b      	mov	r3, r1
 8000204:	71fb      	strb	r3, [r7, #7]
 8000206:	4613      	mov	r3, r2
 8000208:	71bb      	strb	r3, [r7, #6]
    pGPIOHandle->pGPIOx=port;
 800020a:	68fb      	ldr	r3, [r7, #12]
 800020c:	68ba      	ldr	r2, [r7, #8]
 800020e:	601a      	str	r2, [r3, #0]
    pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber = PinNumber;
 8000210:	68fb      	ldr	r3, [r7, #12]
 8000212:	79fa      	ldrb	r2, [r7, #7]
 8000214:	711a      	strb	r2, [r3, #4]
    pGPIOHandle->GPIO_PinConfig.GPIO_PinMode = PinMode;
 8000216:	68fb      	ldr	r3, [r7, #12]
 8000218:	79ba      	ldrb	r2, [r7, #6]
 800021a:	715a      	strb	r2, [r3, #5]
    pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed = PinSpeed;
 800021c:	68fb      	ldr	r3, [r7, #12]
 800021e:	7e3a      	ldrb	r2, [r7, #24]
 8000220:	719a      	strb	r2, [r3, #6]
    pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl = PinPuPdControl;
 8000222:	68fb      	ldr	r3, [r7, #12]
 8000224:	7f3a      	ldrb	r2, [r7, #28]
 8000226:	71da      	strb	r2, [r3, #7]
    GPIO_PeriClockControl(port,ENABLE);
 8000228:	2101      	movs	r1, #1
 800022a:	68b8      	ldr	r0, [r7, #8]
 800022c:	f000 fa08 	bl	8000640 <GPIO_PeriClockControl>
    GPIO_Init(pGPIOHandle);
 8000230:	68f8      	ldr	r0, [r7, #12]
 8000232:	f000 f86b 	bl	800030c <GPIO_Init>
}
 8000236:	bf00      	nop
 8000238:	3710      	adds	r7, #16
 800023a:	46bd      	mov	sp, r7
 800023c:	bd80      	pop	{r7, pc}
	...

08000240 <main>:
int main(void)
{
 8000240:	b580      	push	{r7, lr}
 8000242:	b088      	sub	sp, #32
 8000244:	af02      	add	r7, sp, #8
    GPIO_Handle_t GpioLed,GPIOBtn;
    GpioLed.pGPIOx = GPIOD;
 8000246:	4b1a      	ldr	r3, [pc, #104]	@ (80002b0 <main+0x70>)
 8000248:	60fb      	str	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800024a:	230c      	movs	r3, #12
 800024c:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 800024e:	2301      	movs	r3, #1
 8000250:	747b      	strb	r3, [r7, #17]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000252:	2302      	movs	r3, #2
 8000254:	74bb      	strb	r3, [r7, #18]
    GpioLed.GPIO_PinConfig.GPIO_PinOptype = GPIO_OP_TYPE_PP;
 8000256:	2300      	movs	r3, #0
 8000258:	753b      	strb	r3, [r7, #20]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800025a:	2300      	movs	r3, #0
 800025c:	74fb      	strb	r3, [r7, #19]
    GPIO_PeriClockControl(GPIOD,ENABLE);
 800025e:	2101      	movs	r1, #1
 8000260:	4813      	ldr	r0, [pc, #76]	@ (80002b0 <main+0x70>)
 8000262:	f000 f9ed 	bl	8000640 <GPIO_PeriClockControl>
    GPIO_Init(&GpioLed);
 8000266:	f107 030c 	add.w	r3, r7, #12
 800026a:	4618      	mov	r0, r3
 800026c:	f000 f84e 	bl	800030c <GPIO_Init>
    InitFunction(&GPIOBtn,GPIOA,GPIO_PIN_NO_0,GPIO_MODE_INPUT,GPIO_SPEED_FAST,GPIO_NO_PUPD);
 8000270:	4638      	mov	r0, r7
 8000272:	2300      	movs	r3, #0
 8000274:	9301      	str	r3, [sp, #4]
 8000276:	2302      	movs	r3, #2
 8000278:	9300      	str	r3, [sp, #0]
 800027a:	2300      	movs	r3, #0
 800027c:	2200      	movs	r2, #0
 800027e:	490d      	ldr	r1, [pc, #52]	@ (80002b4 <main+0x74>)
 8000280:	f7ff ffb8 	bl	80001f4 <InitFunction>
    while(1)
    {
    	if (GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) == 1)
 8000284:	2100      	movs	r1, #0
 8000286:	480b      	ldr	r0, [pc, #44]	@ (80002b4 <main+0x74>)
 8000288:	f000 fa60 	bl	800074c <GPIO_ReadFromInputPin>
 800028c:	4603      	mov	r3, r0
 800028e:	2b01      	cmp	r3, #1
 8000290:	d107      	bne.n	80002a2 <main+0x62>
    	{
    		delay();
 8000292:	f7ff ff99 	bl	80001c8 <delay>
    		GPIO_WriteToOutputPin(GPIOD,GPIO_PIN_NO_12,GPIO_PIN_SET);
 8000296:	2201      	movs	r2, #1
 8000298:	210c      	movs	r1, #12
 800029a:	4805      	ldr	r0, [pc, #20]	@ (80002b0 <main+0x70>)
 800029c:	f000 fa6c 	bl	8000778 <GPIO_WriteToOutputPin>
 80002a0:	e7f0      	b.n	8000284 <main+0x44>
    		//delay();
    	}
    	else
    	{
    		GPIO_WriteToOutputPin(GPIOD,GPIO_PIN_NO_12,GPIO_PIN_RESET);
 80002a2:	2200      	movs	r2, #0
 80002a4:	210c      	movs	r1, #12
 80002a6:	4802      	ldr	r0, [pc, #8]	@ (80002b0 <main+0x70>)
 80002a8:	f000 fa66 	bl	8000778 <GPIO_WriteToOutputPin>
    	if (GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) == 1)
 80002ac:	e7ea      	b.n	8000284 <main+0x44>
 80002ae:	bf00      	nop
 80002b0:	40020c00 	.word	0x40020c00
 80002b4:	40020000 	.word	0x40020000

080002b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b8:	480d      	ldr	r0, [pc, #52]	@ (80002f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ba:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002bc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c0:	480c      	ldr	r0, [pc, #48]	@ (80002f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002c2:	490d      	ldr	r1, [pc, #52]	@ (80002f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002c4:	4a0d      	ldr	r2, [pc, #52]	@ (80002fc <LoopForever+0xe>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002c8:	e002      	b.n	80002d0 <LoopCopyDataInit>

080002ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ce:	3304      	adds	r3, #4

080002d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d4:	d3f9      	bcc.n	80002ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002d6:	4a0a      	ldr	r2, [pc, #40]	@ (8000300 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002d8:	4c0a      	ldr	r4, [pc, #40]	@ (8000304 <LoopForever+0x16>)
  movs r3, #0
 80002da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002dc:	e001      	b.n	80002e2 <LoopFillZerobss>

080002de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e0:	3204      	adds	r2, #4

080002e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e4:	d3fb      	bcc.n	80002de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002e6:	f000 fa6d 	bl	80007c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ea:	f7ff ffa9 	bl	8000240 <main>

080002ee <LoopForever>:

LoopForever:
  b LoopForever
 80002ee:	e7fe      	b.n	80002ee <LoopForever>
  ldr   r0, =_estack
 80002f0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002fc:	0800082c 	.word	0x0800082c
  ldr r2, =_sbss
 8000300:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000304:	2000001c 	.word	0x2000001c

08000308 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000308:	e7fe      	b.n	8000308 <ADC_IRQHandler>
	...

0800030c <GPIO_Init>:
#include "stm32f407xx_gpio_driver.h"

/*Init DeInit*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800030c:	b480      	push	{r7}
 800030e:	b087      	sub	sp, #28
 8000310:	af00      	add	r7, sp, #0
 8000312:	6078      	str	r0, [r7, #4]
    uint32_t temp;
    //1. configure the mode of GPIO pin
    if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	795b      	ldrb	r3, [r3, #5]
 8000318:	2b03      	cmp	r3, #3
 800031a:	d81f      	bhi.n	800035c <GPIO_Init+0x50>
    {
        temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	795b      	ldrb	r3, [r3, #5]
 8000320:	461a      	mov	r2, r3
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	791b      	ldrb	r3, [r3, #4]
 8000326:	005b      	lsls	r3, r3, #1
 8000328:	fa02 f303 	lsl.w	r3, r2, r3
 800032c:	613b      	str	r3, [r7, #16]
        pGPIOHandle->pGPIOx->MODER &= ~(0x3 << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));   //clear
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	681a      	ldr	r2, [r3, #0]
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	791b      	ldrb	r3, [r3, #4]
 8000338:	4619      	mov	r1, r3
 800033a:	2303      	movs	r3, #3
 800033c:	408b      	lsls	r3, r1
 800033e:	43db      	mvns	r3, r3
 8000340:	4619      	mov	r1, r3
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	400a      	ands	r2, r1
 8000348:	601a      	str	r2, [r3, #0]
        pGPIOHandle->pGPIOx->MODER |= temp;
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	6819      	ldr	r1, [r3, #0]
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	693a      	ldr	r2, [r7, #16]
 8000356:	430a      	orrs	r2, r1
 8000358:	601a      	str	r2, [r3, #0]
 800035a:	e0ca      	b.n	80004f2 <GPIO_Init+0x1e6>
    }
    else
    {
        // configure IT mode
        if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	795b      	ldrb	r3, [r3, #5]
 8000360:	2b04      	cmp	r3, #4
 8000362:	d117      	bne.n	8000394 <GPIO_Init+0x88>
        {
            // configure the FTSR
            EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000364:	4b4a      	ldr	r3, [pc, #296]	@ (8000490 <GPIO_Init+0x184>)
 8000366:	68db      	ldr	r3, [r3, #12]
 8000368:	687a      	ldr	r2, [r7, #4]
 800036a:	7912      	ldrb	r2, [r2, #4]
 800036c:	4611      	mov	r1, r2
 800036e:	2201      	movs	r2, #1
 8000370:	408a      	lsls	r2, r1
 8000372:	4611      	mov	r1, r2
 8000374:	4a46      	ldr	r2, [pc, #280]	@ (8000490 <GPIO_Init+0x184>)
 8000376:	430b      	orrs	r3, r1
 8000378:	60d3      	str	r3, [r2, #12]
            //clear the corresponding RTSR bit
            EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800037a:	4b45      	ldr	r3, [pc, #276]	@ (8000490 <GPIO_Init+0x184>)
 800037c:	689b      	ldr	r3, [r3, #8]
 800037e:	687a      	ldr	r2, [r7, #4]
 8000380:	7912      	ldrb	r2, [r2, #4]
 8000382:	4611      	mov	r1, r2
 8000384:	2201      	movs	r2, #1
 8000386:	408a      	lsls	r2, r1
 8000388:	43d2      	mvns	r2, r2
 800038a:	4611      	mov	r1, r2
 800038c:	4a40      	ldr	r2, [pc, #256]	@ (8000490 <GPIO_Init+0x184>)
 800038e:	400b      	ands	r3, r1
 8000390:	6093      	str	r3, [r2, #8]
 8000392:	e035      	b.n	8000400 <GPIO_Init+0xf4>
        }
        else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	795b      	ldrb	r3, [r3, #5]
 8000398:	2b05      	cmp	r3, #5
 800039a:	d117      	bne.n	80003cc <GPIO_Init+0xc0>
        {
            // configure the RTSR
            EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800039c:	4b3c      	ldr	r3, [pc, #240]	@ (8000490 <GPIO_Init+0x184>)
 800039e:	689b      	ldr	r3, [r3, #8]
 80003a0:	687a      	ldr	r2, [r7, #4]
 80003a2:	7912      	ldrb	r2, [r2, #4]
 80003a4:	4611      	mov	r1, r2
 80003a6:	2201      	movs	r2, #1
 80003a8:	408a      	lsls	r2, r1
 80003aa:	4611      	mov	r1, r2
 80003ac:	4a38      	ldr	r2, [pc, #224]	@ (8000490 <GPIO_Init+0x184>)
 80003ae:	430b      	orrs	r3, r1
 80003b0:	6093      	str	r3, [r2, #8]
            //clear the corresponding RTSR bit
            EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);            
 80003b2:	4b37      	ldr	r3, [pc, #220]	@ (8000490 <GPIO_Init+0x184>)
 80003b4:	68db      	ldr	r3, [r3, #12]
 80003b6:	687a      	ldr	r2, [r7, #4]
 80003b8:	7912      	ldrb	r2, [r2, #4]
 80003ba:	4611      	mov	r1, r2
 80003bc:	2201      	movs	r2, #1
 80003be:	408a      	lsls	r2, r1
 80003c0:	43d2      	mvns	r2, r2
 80003c2:	4611      	mov	r1, r2
 80003c4:	4a32      	ldr	r2, [pc, #200]	@ (8000490 <GPIO_Init+0x184>)
 80003c6:	400b      	ands	r3, r1
 80003c8:	60d3      	str	r3, [r2, #12]
 80003ca:	e019      	b.n	8000400 <GPIO_Init+0xf4>
        }
        else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	795b      	ldrb	r3, [r3, #5]
 80003d0:	2b06      	cmp	r3, #6
 80003d2:	d115      	bne.n	8000400 <GPIO_Init+0xf4>
        {
            // configure the RFTSR
            EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003d4:	4b2e      	ldr	r3, [pc, #184]	@ (8000490 <GPIO_Init+0x184>)
 80003d6:	689b      	ldr	r3, [r3, #8]
 80003d8:	687a      	ldr	r2, [r7, #4]
 80003da:	7912      	ldrb	r2, [r2, #4]
 80003dc:	4611      	mov	r1, r2
 80003de:	2201      	movs	r2, #1
 80003e0:	408a      	lsls	r2, r1
 80003e2:	4611      	mov	r1, r2
 80003e4:	4a2a      	ldr	r2, [pc, #168]	@ (8000490 <GPIO_Init+0x184>)
 80003e6:	430b      	orrs	r3, r1
 80003e8:	6093      	str	r3, [r2, #8]

            EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ea:	4b29      	ldr	r3, [pc, #164]	@ (8000490 <GPIO_Init+0x184>)
 80003ec:	68db      	ldr	r3, [r3, #12]
 80003ee:	687a      	ldr	r2, [r7, #4]
 80003f0:	7912      	ldrb	r2, [r2, #4]
 80003f2:	4611      	mov	r1, r2
 80003f4:	2201      	movs	r2, #1
 80003f6:	408a      	lsls	r2, r1
 80003f8:	4611      	mov	r1, r2
 80003fa:	4a25      	ldr	r2, [pc, #148]	@ (8000490 <GPIO_Init+0x184>)
 80003fc:	430b      	orrs	r3, r1
 80003fe:	60d3      	str	r3, [r2, #12]
        }

        //2 configure the GPIO port selection in SYSCFG_EXTICR
        uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	791b      	ldrb	r3, [r3, #4]
 8000404:	089b      	lsrs	r3, r3, #2
 8000406:	75fb      	strb	r3, [r7, #23]
        uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	791b      	ldrb	r3, [r3, #4]
 800040c:	f003 0303 	and.w	r3, r3, #3
 8000410:	75bb      	strb	r3, [r7, #22]
        uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	4a1f      	ldr	r2, [pc, #124]	@ (8000494 <GPIO_Init+0x188>)
 8000418:	4293      	cmp	r3, r2
 800041a:	d04d      	beq.n	80004b8 <GPIO_Init+0x1ac>
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	4a1d      	ldr	r2, [pc, #116]	@ (8000498 <GPIO_Init+0x18c>)
 8000422:	4293      	cmp	r3, r2
 8000424:	d032      	beq.n	800048c <GPIO_Init+0x180>
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	4a1c      	ldr	r2, [pc, #112]	@ (800049c <GPIO_Init+0x190>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d02b      	beq.n	8000488 <GPIO_Init+0x17c>
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	4a1a      	ldr	r2, [pc, #104]	@ (80004a0 <GPIO_Init+0x194>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d024      	beq.n	8000484 <GPIO_Init+0x178>
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	4a19      	ldr	r2, [pc, #100]	@ (80004a4 <GPIO_Init+0x198>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d01d      	beq.n	8000480 <GPIO_Init+0x174>
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	4a17      	ldr	r2, [pc, #92]	@ (80004a8 <GPIO_Init+0x19c>)
 800044a:	4293      	cmp	r3, r2
 800044c:	d016      	beq.n	800047c <GPIO_Init+0x170>
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	4a16      	ldr	r2, [pc, #88]	@ (80004ac <GPIO_Init+0x1a0>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d00f      	beq.n	8000478 <GPIO_Init+0x16c>
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	4a14      	ldr	r2, [pc, #80]	@ (80004b0 <GPIO_Init+0x1a4>)
 800045e:	4293      	cmp	r3, r2
 8000460:	d008      	beq.n	8000474 <GPIO_Init+0x168>
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	4a13      	ldr	r2, [pc, #76]	@ (80004b4 <GPIO_Init+0x1a8>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d101      	bne.n	8000470 <GPIO_Init+0x164>
 800046c:	2308      	movs	r3, #8
 800046e:	e024      	b.n	80004ba <GPIO_Init+0x1ae>
 8000470:	2300      	movs	r3, #0
 8000472:	e022      	b.n	80004ba <GPIO_Init+0x1ae>
 8000474:	2307      	movs	r3, #7
 8000476:	e020      	b.n	80004ba <GPIO_Init+0x1ae>
 8000478:	2306      	movs	r3, #6
 800047a:	e01e      	b.n	80004ba <GPIO_Init+0x1ae>
 800047c:	2305      	movs	r3, #5
 800047e:	e01c      	b.n	80004ba <GPIO_Init+0x1ae>
 8000480:	2304      	movs	r3, #4
 8000482:	e01a      	b.n	80004ba <GPIO_Init+0x1ae>
 8000484:	2303      	movs	r3, #3
 8000486:	e018      	b.n	80004ba <GPIO_Init+0x1ae>
 8000488:	2302      	movs	r3, #2
 800048a:	e016      	b.n	80004ba <GPIO_Init+0x1ae>
 800048c:	2301      	movs	r3, #1
 800048e:	e014      	b.n	80004ba <GPIO_Init+0x1ae>
 8000490:	40013c00 	.word	0x40013c00
 8000494:	40020000 	.word	0x40020000
 8000498:	40020400 	.word	0x40020400
 800049c:	40020800 	.word	0x40020800
 80004a0:	40020c00 	.word	0x40020c00
 80004a4:	40021000 	.word	0x40021000
 80004a8:	40021400 	.word	0x40021400
 80004ac:	40021800 	.word	0x40021800
 80004b0:	40021c00 	.word	0x40021c00
 80004b4:	40022000 	.word	0x40022000
 80004b8:	2300      	movs	r3, #0
 80004ba:	757b      	strb	r3, [r7, #21]
        SYSCFG_PCLK_EN();
 80004bc:	4b5d      	ldr	r3, [pc, #372]	@ (8000634 <GPIO_Init+0x328>)
 80004be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80004c0:	4a5c      	ldr	r2, [pc, #368]	@ (8000634 <GPIO_Init+0x328>)
 80004c2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80004c6:	6453      	str	r3, [r2, #68]	@ 0x44
        SYSCFG->EXTICR[temp1] = portcode << (temp2 *4);
 80004c8:	7d7a      	ldrb	r2, [r7, #21]
 80004ca:	7dbb      	ldrb	r3, [r7, #22]
 80004cc:	009b      	lsls	r3, r3, #2
 80004ce:	fa02 f103 	lsl.w	r1, r2, r3
 80004d2:	4a59      	ldr	r2, [pc, #356]	@ (8000638 <GPIO_Init+0x32c>)
 80004d4:	7dfb      	ldrb	r3, [r7, #23]
 80004d6:	3302      	adds	r3, #2
 80004d8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        //3. enable the exti interrupt delivery using IMR
        EXTI->IRM |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004dc:	4b57      	ldr	r3, [pc, #348]	@ (800063c <GPIO_Init+0x330>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	687a      	ldr	r2, [r7, #4]
 80004e2:	7912      	ldrb	r2, [r2, #4]
 80004e4:	4611      	mov	r1, r2
 80004e6:	2201      	movs	r2, #1
 80004e8:	408a      	lsls	r2, r1
 80004ea:	4611      	mov	r1, r2
 80004ec:	4a53      	ldr	r2, [pc, #332]	@ (800063c <GPIO_Init+0x330>)
 80004ee:	430b      	orrs	r3, r1
 80004f0:	6013      	str	r3, [r2, #0]
        
    }

    //2. configure the speed
    temp = 0;
 80004f2:	2300      	movs	r3, #0
 80004f4:	613b      	str	r3, [r7, #16]
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	799b      	ldrb	r3, [r3, #6]
 80004fa:	461a      	mov	r2, r3
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	005b      	lsls	r3, r3, #1
 8000502:	fa02 f303 	lsl.w	r3, r2, r3
 8000506:	613b      	str	r3, [r7, #16]
    pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));   //clear
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	689a      	ldr	r2, [r3, #8]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	791b      	ldrb	r3, [r3, #4]
 8000512:	4619      	mov	r1, r3
 8000514:	2303      	movs	r3, #3
 8000516:	408b      	lsls	r3, r1
 8000518:	43db      	mvns	r3, r3
 800051a:	4619      	mov	r1, r3
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	400a      	ands	r2, r1
 8000522:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	6899      	ldr	r1, [r3, #8]
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	693a      	ldr	r2, [r7, #16]
 8000530:	430a      	orrs	r2, r1
 8000532:	609a      	str	r2, [r3, #8]

    //3. configure the pull up/dow setting
    temp = 0;
 8000534:	2300      	movs	r3, #0
 8000536:	613b      	str	r3, [r7, #16]
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	79db      	ldrb	r3, [r3, #7]
 800053c:	461a      	mov	r2, r3
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	791b      	ldrb	r3, [r3, #4]
 8000542:	005b      	lsls	r3, r3, #1
 8000544:	fa02 f303 	lsl.w	r3, r2, r3
 8000548:	613b      	str	r3, [r7, #16]
    pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));   //clear
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	68da      	ldr	r2, [r3, #12]
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	791b      	ldrb	r3, [r3, #4]
 8000554:	4619      	mov	r1, r3
 8000556:	2303      	movs	r3, #3
 8000558:	408b      	lsls	r3, r1
 800055a:	43db      	mvns	r3, r3
 800055c:	4619      	mov	r1, r3
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	400a      	ands	r2, r1
 8000564:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	68d9      	ldr	r1, [r3, #12]
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	693a      	ldr	r2, [r7, #16]
 8000572:	430a      	orrs	r2, r1
 8000574:	60da      	str	r2, [r3, #12]

    //4. configure the output type
    temp = 0;
 8000576:	2300      	movs	r3, #0
 8000578:	613b      	str	r3, [r7, #16]
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOptype <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	7a1b      	ldrb	r3, [r3, #8]
 800057e:	461a      	mov	r2, r3
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	791b      	ldrb	r3, [r3, #4]
 8000584:	fa02 f303 	lsl.w	r3, r2, r3
 8000588:	613b      	str	r3, [r7, #16]
    pGPIOHandle->pGPIOx->PUPDR &= ~(0x1 << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));   //clear
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	68da      	ldr	r2, [r3, #12]
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	4619      	mov	r1, r3
 8000596:	2301      	movs	r3, #1
 8000598:	408b      	lsls	r3, r1
 800059a:	43db      	mvns	r3, r3
 800059c:	4619      	mov	r1, r3
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	400a      	ands	r2, r1
 80005a4:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	6859      	ldr	r1, [r3, #4]
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	693a      	ldr	r2, [r7, #16]
 80005b2:	430a      	orrs	r2, r1
 80005b4:	605a      	str	r2, [r3, #4]

    //5. configure the alt functionality
    temp = 0;
 80005b6:	2300      	movs	r3, #0
 80005b8:	613b      	str	r3, [r7, #16]
    if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	795b      	ldrb	r3, [r3, #5]
 80005be:	2b02      	cmp	r3, #2
 80005c0:	d132      	bne.n	8000628 <GPIO_Init+0x31c>
    {
        uint32_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	791b      	ldrb	r3, [r3, #4]
 80005c6:	08db      	lsrs	r3, r3, #3
 80005c8:	b2db      	uxtb	r3, r3
 80005ca:	60fb      	str	r3, [r7, #12]
        uint32_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	791b      	ldrb	r3, [r3, #4]
 80005d0:	f003 0307 	and.w	r3, r3, #7
 80005d4:	60bb      	str	r3, [r7, #8]
        pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2));
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	68fa      	ldr	r2, [r7, #12]
 80005dc:	3208      	adds	r2, #8
 80005de:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005e2:	68bb      	ldr	r3, [r7, #8]
 80005e4:	009b      	lsls	r3, r3, #2
 80005e6:	210f      	movs	r1, #15
 80005e8:	fa01 f303 	lsl.w	r3, r1, r3
 80005ec:	43db      	mvns	r3, r3
 80005ee:	4619      	mov	r1, r3
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4011      	ands	r1, r2
 80005f6:	68fa      	ldr	r2, [r7, #12]
 80005f8:	3208      	adds	r2, #8
 80005fa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	68fa      	ldr	r2, [r7, #12]
 8000604:	3208      	adds	r2, #8
 8000606:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	7a5b      	ldrb	r3, [r3, #9]
 800060e:	4619      	mov	r1, r3
 8000610:	68bb      	ldr	r3, [r7, #8]
 8000612:	009b      	lsls	r3, r3, #2
 8000614:	fa01 f303 	lsl.w	r3, r1, r3
 8000618:	4619      	mov	r1, r3
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	4311      	orrs	r1, r2
 8000620:	68fa      	ldr	r2, [r7, #12]
 8000622:	3208      	adds	r2, #8
 8000624:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }

}
 8000628:	bf00      	nop
 800062a:	371c      	adds	r7, #28
 800062c:	46bd      	mov	sp, r7
 800062e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000632:	4770      	bx	lr
 8000634:	40023800 	.word	0x40023800
 8000638:	40013800 	.word	0x40013800
 800063c:	40013c00 	.word	0x40013c00

08000640 <GPIO_PeriClockControl>:
    }
}

/*Peripheral Clock setup*/
void GPIO_PeriClockControl(RCC_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000640:	b480      	push	{r7}
 8000642:	b083      	sub	sp, #12
 8000644:	af00      	add	r7, sp, #0
 8000646:	6078      	str	r0, [r7, #4]
 8000648:	460b      	mov	r3, r1
 800064a:	70fb      	strb	r3, [r7, #3]
    if (EnorDi == ENABLE)
 800064c:	78fb      	ldrb	r3, [r7, #3]
 800064e:	2b01      	cmp	r3, #1
 8000650:	d161      	bne.n	8000716 <GPIO_PeriClockControl+0xd6>
    {
        if (pGPIOx == GPIOA)
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	4a33      	ldr	r2, [pc, #204]	@ (8000724 <GPIO_PeriClockControl+0xe4>)
 8000656:	4293      	cmp	r3, r2
 8000658:	d106      	bne.n	8000668 <GPIO_PeriClockControl+0x28>
        {
            GPIOA_PCLK_EN();
 800065a:	4b33      	ldr	r3, [pc, #204]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 800065c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800065e:	4a32      	ldr	r2, [pc, #200]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 8000660:	f043 0301 	orr.w	r3, r3, #1
 8000664:	6313      	str	r3, [r2, #48]	@ 0x30
    }
    else
    {

    }
}
 8000666:	e056      	b.n	8000716 <GPIO_PeriClockControl+0xd6>
        else if (pGPIOx == GPIOB)
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	4a30      	ldr	r2, [pc, #192]	@ (800072c <GPIO_PeriClockControl+0xec>)
 800066c:	4293      	cmp	r3, r2
 800066e:	d106      	bne.n	800067e <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 8000670:	4b2d      	ldr	r3, [pc, #180]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 8000672:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000674:	4a2c      	ldr	r2, [pc, #176]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 8000676:	f043 0302 	orr.w	r3, r3, #2
 800067a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800067c:	e04b      	b.n	8000716 <GPIO_PeriClockControl+0xd6>
        else if (pGPIOx == GPIOC)
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	4a2b      	ldr	r2, [pc, #172]	@ (8000730 <GPIO_PeriClockControl+0xf0>)
 8000682:	4293      	cmp	r3, r2
 8000684:	d106      	bne.n	8000694 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 8000686:	4b28      	ldr	r3, [pc, #160]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 8000688:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800068a:	4a27      	ldr	r2, [pc, #156]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 800068c:	f043 0304 	orr.w	r3, r3, #4
 8000690:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000692:	e040      	b.n	8000716 <GPIO_PeriClockControl+0xd6>
        else if (pGPIOx == GPIOD)
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	4a27      	ldr	r2, [pc, #156]	@ (8000734 <GPIO_PeriClockControl+0xf4>)
 8000698:	4293      	cmp	r3, r2
 800069a:	d106      	bne.n	80006aa <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 800069c:	4b22      	ldr	r3, [pc, #136]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 800069e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006a0:	4a21      	ldr	r2, [pc, #132]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006a2:	f043 0308 	orr.w	r3, r3, #8
 80006a6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006a8:	e035      	b.n	8000716 <GPIO_PeriClockControl+0xd6>
        else if (pGPIOx == GPIOE)
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	4a22      	ldr	r2, [pc, #136]	@ (8000738 <GPIO_PeriClockControl+0xf8>)
 80006ae:	4293      	cmp	r3, r2
 80006b0:	d106      	bne.n	80006c0 <GPIO_PeriClockControl+0x80>
            GPIOE_PCLK_EN();
 80006b2:	4b1d      	ldr	r3, [pc, #116]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006b6:	4a1c      	ldr	r2, [pc, #112]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006b8:	f043 0310 	orr.w	r3, r3, #16
 80006bc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006be:	e02a      	b.n	8000716 <GPIO_PeriClockControl+0xd6>
        else if (pGPIOx == GPIOF)
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	4a1e      	ldr	r2, [pc, #120]	@ (800073c <GPIO_PeriClockControl+0xfc>)
 80006c4:	4293      	cmp	r3, r2
 80006c6:	d106      	bne.n	80006d6 <GPIO_PeriClockControl+0x96>
            GPIOF_PCLK_EN();
 80006c8:	4b17      	ldr	r3, [pc, #92]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006cc:	4a16      	ldr	r2, [pc, #88]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006ce:	f043 0320 	orr.w	r3, r3, #32
 80006d2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006d4:	e01f      	b.n	8000716 <GPIO_PeriClockControl+0xd6>
        else if (pGPIOx == GPIOG)
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	4a19      	ldr	r2, [pc, #100]	@ (8000740 <GPIO_PeriClockControl+0x100>)
 80006da:	4293      	cmp	r3, r2
 80006dc:	d106      	bne.n	80006ec <GPIO_PeriClockControl+0xac>
            GPIOG_PCLK_EN();
 80006de:	4b12      	ldr	r3, [pc, #72]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006e2:	4a11      	ldr	r2, [pc, #68]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80006e8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006ea:	e014      	b.n	8000716 <GPIO_PeriClockControl+0xd6>
        else if (pGPIOx == GPIOH)
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	4a15      	ldr	r2, [pc, #84]	@ (8000744 <GPIO_PeriClockControl+0x104>)
 80006f0:	4293      	cmp	r3, r2
 80006f2:	d106      	bne.n	8000702 <GPIO_PeriClockControl+0xc2>
            GPIOH_PCLK_EN();
 80006f4:	4b0c      	ldr	r3, [pc, #48]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006f8:	4a0b      	ldr	r2, [pc, #44]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 80006fa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80006fe:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000700:	e009      	b.n	8000716 <GPIO_PeriClockControl+0xd6>
        else if (pGPIOx == GPIOI)
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	4a10      	ldr	r2, [pc, #64]	@ (8000748 <GPIO_PeriClockControl+0x108>)
 8000706:	4293      	cmp	r3, r2
 8000708:	d105      	bne.n	8000716 <GPIO_PeriClockControl+0xd6>
            GPIOI_PCLK_EN();
 800070a:	4b07      	ldr	r3, [pc, #28]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 800070c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800070e:	4a06      	ldr	r2, [pc, #24]	@ (8000728 <GPIO_PeriClockControl+0xe8>)
 8000710:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000714:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000716:	bf00      	nop
 8000718:	370c      	adds	r7, #12
 800071a:	46bd      	mov	sp, r7
 800071c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000720:	4770      	bx	lr
 8000722:	bf00      	nop
 8000724:	40020000 	.word	0x40020000
 8000728:	40023800 	.word	0x40023800
 800072c:	40020400 	.word	0x40020400
 8000730:	40020800 	.word	0x40020800
 8000734:	40020c00 	.word	0x40020c00
 8000738:	40021000 	.word	0x40021000
 800073c:	40021400 	.word	0x40021400
 8000740:	40021800 	.word	0x40021800
 8000744:	40021c00 	.word	0x40021c00
 8000748:	40022000 	.word	0x40022000

0800074c <GPIO_ReadFromInputPin>:

/*Data read and Write*/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800074c:	b480      	push	{r7}
 800074e:	b085      	sub	sp, #20
 8000750:	af00      	add	r7, sp, #0
 8000752:	6078      	str	r0, [r7, #4]
 8000754:	460b      	mov	r3, r1
 8000756:	70fb      	strb	r3, [r7, #3]
    uint8_t value;
    value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	691a      	ldr	r2, [r3, #16]
 800075c:	78fb      	ldrb	r3, [r7, #3]
 800075e:	fa22 f303 	lsr.w	r3, r2, r3
 8000762:	b2db      	uxtb	r3, r3
 8000764:	f003 0301 	and.w	r3, r3, #1
 8000768:	73fb      	strb	r3, [r7, #15]
    return value;
 800076a:	7bfb      	ldrb	r3, [r7, #15]
}
 800076c:	4618      	mov	r0, r3
 800076e:	3714      	adds	r7, #20
 8000770:	46bd      	mov	sp, r7
 8000772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000776:	4770      	bx	lr

08000778 <GPIO_WriteToOutputPin>:
    value = (uint16_t)(pGPIOx->IDR);
    return value;
}
//void GPIO_WriteFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value);
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 8000778:	b480      	push	{r7}
 800077a:	b083      	sub	sp, #12
 800077c:	af00      	add	r7, sp, #0
 800077e:	6078      	str	r0, [r7, #4]
 8000780:	460b      	mov	r3, r1
 8000782:	70fb      	strb	r3, [r7, #3]
 8000784:	4613      	mov	r3, r2
 8000786:	70bb      	strb	r3, [r7, #2]
    if(Value == GPIO_PIN_SET)
 8000788:	78bb      	ldrb	r3, [r7, #2]
 800078a:	2b01      	cmp	r3, #1
 800078c:	d109      	bne.n	80007a2 <GPIO_WriteToOutputPin+0x2a>
    {
        pGPIOx->ODR |= (1<<PinNumber);
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	695b      	ldr	r3, [r3, #20]
 8000792:	78fa      	ldrb	r2, [r7, #3]
 8000794:	2101      	movs	r1, #1
 8000796:	fa01 f202 	lsl.w	r2, r1, r2
 800079a:	431a      	orrs	r2, r3
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	615a      	str	r2, [r3, #20]
    }
    else
    {
        pGPIOx->ODR &= ~(1<<PinNumber);
    }
}
 80007a0:	e009      	b.n	80007b6 <GPIO_WriteToOutputPin+0x3e>
        pGPIOx->ODR &= ~(1<<PinNumber);
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	695b      	ldr	r3, [r3, #20]
 80007a6:	78fa      	ldrb	r2, [r7, #3]
 80007a8:	2101      	movs	r1, #1
 80007aa:	fa01 f202 	lsl.w	r2, r1, r2
 80007ae:	43d2      	mvns	r2, r2
 80007b0:	401a      	ands	r2, r3
 80007b2:	687b      	ldr	r3, [r7, #4]
 80007b4:	615a      	str	r2, [r3, #20]
}
 80007b6:	bf00      	nop
 80007b8:	370c      	adds	r7, #12
 80007ba:	46bd      	mov	sp, r7
 80007bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007c0:	4770      	bx	lr
	...

080007c4 <__libc_init_array>:
 80007c4:	b570      	push	{r4, r5, r6, lr}
 80007c6:	4d0d      	ldr	r5, [pc, #52]	@ (80007fc <__libc_init_array+0x38>)
 80007c8:	4c0d      	ldr	r4, [pc, #52]	@ (8000800 <__libc_init_array+0x3c>)
 80007ca:	1b64      	subs	r4, r4, r5
 80007cc:	10a4      	asrs	r4, r4, #2
 80007ce:	2600      	movs	r6, #0
 80007d0:	42a6      	cmp	r6, r4
 80007d2:	d109      	bne.n	80007e8 <__libc_init_array+0x24>
 80007d4:	4d0b      	ldr	r5, [pc, #44]	@ (8000804 <__libc_init_array+0x40>)
 80007d6:	4c0c      	ldr	r4, [pc, #48]	@ (8000808 <__libc_init_array+0x44>)
 80007d8:	f000 f818 	bl	800080c <_init>
 80007dc:	1b64      	subs	r4, r4, r5
 80007de:	10a4      	asrs	r4, r4, #2
 80007e0:	2600      	movs	r6, #0
 80007e2:	42a6      	cmp	r6, r4
 80007e4:	d105      	bne.n	80007f2 <__libc_init_array+0x2e>
 80007e6:	bd70      	pop	{r4, r5, r6, pc}
 80007e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ec:	4798      	blx	r3
 80007ee:	3601      	adds	r6, #1
 80007f0:	e7ee      	b.n	80007d0 <__libc_init_array+0xc>
 80007f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80007f6:	4798      	blx	r3
 80007f8:	3601      	adds	r6, #1
 80007fa:	e7f2      	b.n	80007e2 <__libc_init_array+0x1e>
 80007fc:	08000824 	.word	0x08000824
 8000800:	08000824 	.word	0x08000824
 8000804:	08000824 	.word	0x08000824
 8000808:	08000828 	.word	0x08000828

0800080c <_init>:
 800080c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800080e:	bf00      	nop
 8000810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000812:	bc08      	pop	{r3}
 8000814:	469e      	mov	lr, r3
 8000816:	4770      	bx	lr

08000818 <_fini>:
 8000818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800081a:	bf00      	nop
 800081c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800081e:	bc08      	pop	{r3}
 8000820:	469e      	mov	lr, r3
 8000822:	4770      	bx	lr
